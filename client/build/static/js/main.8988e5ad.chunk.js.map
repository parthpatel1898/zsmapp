{"version":3,"sources":["serviceWorker.js","pages/components/Header.js","pages/components/Footer.js","pages/Home.js","pages/ZSM-Form.js","pages/Form-Submission.js","pages/components/ScrollInToView.js","index.js","pages/Constants.js"],"names":["Boolean","window","location","hostname","match","Header","props","state","href","className","src","alt","React","Component","Footer","Date","getFullYear","Home","isListVisible","showForm","addressSuggestions","phoneQuery","addressQuery","addressSelected","searchQuery","searchResults","redirect","selUser","query","this","setState","length","url","axios","get","then","res","data","forEach","address","value","Address","text","City","State","Zipcode","id","push","to","pathname","Container","Grid","columns","divided","stackable","Row","Column","Input","type","placeholder","onChange","event","target","Button","primary","disabled","onClick","handleSearchPhone","Dropdown","search","selection","noResultsMessage","onSearchChange","handleAutofillAddress","options","handleSearchAddress","Divider","List","relaxed","Item","Content","Description","as","map","user","key","handleOpen","First_Name","Last_Name","Zone_Name","Cell_Phone","Email","ZSMForm","currUser","submitSuccess","day","time","split","includes","a","b","daysOfWeek","indexOf","avail_days","checked","splice","sort","sortDays","toString","body","put","Object","keys","Form","Field","control","TextArea","label","Seva","Group","widths","Select","Constants","workStatusOptions","children","htmlFor","Work_Status","searchInput","occupationOptions","Occupation","Table","celled","unstackable","HeaderCell","Body","Cell","Checkbox","getAvailabilityValues","setAvailabilityValues","fluid","multiple","skills","Skills","Interests","DOB","tshirtOptions","Shirt_Size","Licenses","handleSubmit","FormSubmission","Message","positive","ScrollIntoView","componentDidMount","scrollTo","componentDidUpdate","prevProps","render","PureComponent","withRouter","routing","exact","path","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.8988e5ad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n  render() {\n    return (\n      <header>\n        <a href=\"/\"><img className=\"title-image\" src={\"https://chicagomandir.org/static/media/midwest-logo.c6c0107b.png\"} alt=\"BAPS Swaminarayan Sastha - Midwest\" /></a>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n  render() {\n    return (\n      <footer>\n        <div className=\"footer-content-container\">\n          <img className=\"footer-image\" src={\"https://chicagomandir.org/static/media/psm-logo-msm-WHITE.2e3cb4d0.png\"} alt=\"BAPS Swaminarayan Sanstha - Midwest\" />\n          <div className=\"footer-charity-text-container\">\n            <p>&copy; {(new Date().getFullYear())} BAPS Swaminarayan Sanstha. All Rights Reserved.</p>\n            <p>\n              1851 S IL Route 59 Pramukh Swami Rd Bartlett, IL 60103-3008 USA\n            </p>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n","import React from \"react\";\nimport { Container, Grid, Input, Button, Divider, List, Dropdown, Message } from \"semantic-ui-react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isListVisible: false,\n      showForm: false,\n      addressSuggestions: [],\n      phoneQuery: \"\",\n      addressQuery: \"\",\n      addressSelected: false,\n      searchQuery: \"\",\n      searchResults: [],\n      redirect: false,\n      selUser: -1\n    };\n  }\n\n  componentDidMount() {\n    \n  }\n\n  handleAutofillAddress(query) {\n    this.setState({addressSelected: false});\n    this.setState({addressQuery: query});\n    if (query.length >= 5) {\n      let url = `/api/users/searchAddress/${query}`;\n      axios.get(url).then((res) => {\n        this.setState({addressSuggestions: []});\n        res.data.data.forEach(address => {\n          this.setState({ addressSuggestions: [...this.state.addressSuggestions, {value: address.Address, text: address.Address + \", \" + address.City + \", \" + address.State + \" \" + address.Zipcode}] })\n        });\n      });\n    }\n    else {\n      this.setState({addressSuggestions: []});\n    }\n  }\n\n  handleSearchAddress() {\n    this.setState({searchQuery: this.state.addressQuery});\n    let url = `/api/users/address/${this.state.addressQuery}`;\n    axios.get(url).then((res) => {\n      this.setState({addressQuery: \"\"});\n      this.setState({isListVisible: true, searchResults: res.data.data});\n    });\n    \n  }\n\n  handleSearchPhone() {\n    this.setState({searchQuery: this.state.phoneQuery});\n    let url = `/api/users/searchPhone/${this.state.phoneQuery}`;\n    axios.get(url).then((res) => {\n      this.setState({phoneQuery: \"\"});\n      this.setState({isListVisible: true, searchResults: res.data.data});\n    });\n  }\n\n  handleOpen(id) {\n    this.setState({selUser: id, redirect: true});\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to={{\n        pathname: '/form',\n        state: { selUser: this.state.selUser }\n      }} />\n    }\n    else {\n      return (\n        <div>\n          <Header></Header>\n          <Container>\n            <div className=\"homePage\">\n              <Grid columns={2} divided stackable>\n                <Grid.Row>\n                  <Grid.Column className=\"searchCol\">\n                    <h2>By Phone Number</h2>\n                    <Input type=\"number\" placeholder=\"Ex: 123456790, only enter digits\" value={this.state.phoneQuery} onChange={(event)=> {this.setState({phoneQuery: event.target.value})}} />\n                    <Button primary disabled={this.state.phoneQuery.length < 7} onClick={() => this.handleSearchPhone()}>Search</Button>\n                  </Grid.Column>\n                  <Grid.Column className=\"searchCol\">\n                    <h2>By Home Address</h2>\n                    <Dropdown\n                      placeholder='Enter Address'\n                      search\n                      selection\n                      value={this.state.addressQuery}\n                      noResultsMessage={this.state.addressQuery.length > 5 ? \"No results found\" : \"Type more characters for autofill options\"}\n                      onSearchChange={(event) => this.handleAutofillAddress(event.target.value)}\n                      onChange={(event, data) => this.setState({addressQuery: data.value, addressSelected: true})}\n                      options={this.state.addressSuggestions}\n                    />\n                    <Button disabled={!this.state.addressSelected} onClick={() => this.handleSearchAddress()} primary>Search</Button>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n              <Divider></Divider>\n              {this.state.isListVisible ? \n                <List divided relaxed>\n                  <List.Item>\n                    <List.Content className=\"searchQueryCont\">\n                      <List.Description as='p'><strong>Search Query: </strong>{this.state.searchQuery}</List.Description>\n                      {this.state.searchResults.length === 0 ?\n                        <List.Description as='p'>No results found :(</List.Description>\n                      : \"\"}\n                    </List.Content>\n                  </List.Item>\n                    \n                  {this.state.searchResults.map((user) => {\n                    return (\n                      <List.Item key={user.id}>\n                        <List.Content as='a' onClick={() => {this.handleOpen(user.id)}}>\n                          <List.Header as='p'>{user.First_Name + \" \" + user.Last_Name}</List.Header>\n                          <List.Description as='p'><strong>Zone: </strong>{user.Zone_Name}</List.Description>\n                          <List.Description as='p'><strong>Phone Number: </strong>{user.Cell_Phone}</List.Description>\n                          <List.Description as='p'><strong>Email: </strong>{user.Email}</List.Description>\n                          <List.Description as='p'><strong>Address: </strong>{user.Address + \", \" + user.City + \", \" + user.State + \" \" + user.Zipcode}</List.Description>\n                        </List.Content>\n                      </List.Item>\n                    );\n                  })}\n                </List>\n              : \"\"}\n            </div>\n          </Container>\n          <Footer></Footer>\n        </div>\n        \n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Form, TextArea, Button, Select, Dropdown, Table, Checkbox, Container, List, Grid, Divider } from \"semantic-ui-react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Constants from './Constants'\n\nexport default class ZSMForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currUser: {},\n      submitSuccess: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state && this.props.location.state.selUser) {\n      let url = `/api/users/${this.props.location.state.selUser}`;\n      axios.get(url).then((res) => {\n        this.setState({currUser: res.data.data[0]});\n      });\n    }\n  }\n\n  getAvailabilityValues(day, time) {\n    let avail_days = this.state.currUser[\"Seva_Availability_\" + time].split(\",\");\n    if (avail_days.includes(day)) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  sortDays(a,b){\n    var daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    return daysOfWeek.indexOf(a) - daysOfWeek.indexOf(b); // basic sort function that compares the indexes of the two days\n  }\n\n  setAvailabilityValues(day, time, data) {\n    var avail_days = this.state.currUser[\"Seva_Availability_\" + time].split(\",\");\n    if (data.checked) {\n      avail_days.push(day);\n    }\n    else {\n      avail_days.splice(avail_days.indexOf(day), 1);\n    }\n    this.setState({currUser: {...this.state.currUser, [\"Seva_Availability_\"+time] : avail_days.sort(this.sortDays).toString() }});\n  }\n\n  handleSubmit() {\n    let body = {\n      currUser: this.state.currUser\n    }\n    let url = `/api/users/${this.props.location.state.selUser}`;\n    axios.put(url, body).then((res) => {\n      if (res.data.data) {\n        this.setState({submitSuccess: true});\n      }\n    });\n  }\n\n  render() {\n    if (!this.props.location.state || !this.props.location.state.selUser) {\n      return <Redirect to=\"/\" />\n    }\n    else if (this.state.submitSuccess) {\n      return <Redirect push to={{\n        pathname: '/submit',\n        state: { submitSuccess: true}\n      }} />\n    } else {\n      return (\n        <div>\n          <Header></Header>\n          <Container>\n            {Object.keys(this.state.currUser).length > 0 ?\n              <div className=\"formPage\">\n                <List>\n                  <List.Item>\n                    <List.Content as='div'>\n                      <List.Header as='h1'>{this.state.currUser.First_Name + \" \" + this.state.currUser.Last_Name}</List.Header>\n                      <Grid columns={2} divided stackable className=\"headerCol\">\n                        <Grid.Row>\n                          <Grid.Column className=\"searchCol\">\n                            <List.Description as='p'><strong>Phone: </strong>{this.state.currUser.Cell_Phone}</List.Description>\n                            <List.Description as='p'><strong>Email: </strong>{this.state.currUser.Email}</List.Description>\n                          </Grid.Column>\n                          <Grid.Column className=\"searchCol\">\n                          <List.Description as='p'><strong>Zone: </strong>{this.state.currUser.Zone_Name}</List.Description>\n                            <List.Description as='p'><strong>Address: </strong>{this.state.currUser.Address + \", \" + this.state.currUser.City + \", \" + this.state.currUser.State + \" \" + this.state.currUser.Zipcode}</List.Description>\n                          </Grid.Column>\n                        </Grid.Row>\n                      </Grid>\n                    </List.Content>\n                  </List.Item>\n                </List>\n                <Divider></Divider>\n              \n                <Form className=\"formCont\">\n                  <Form.Field\n                    id='form-textarea-control-current-seva'\n                    control={TextArea}\n                    label='Current Seva:'\n                    value={this.state.currUser.Seva}\n                    onChange={(event) => this.setState({currUser: {...this.state.currUser, Seva: event.target.value}})}\n                    placeholder=\"Please type 'None' if you do not currently have an assigned seva\"\n                  />\n                  <Form.Group widths='equal'>\n                    <Form.Field\n                      control={Select}\n                      options={Constants.workStatusOptions}\n                      label={{ children: 'Work Status:', htmlFor: 'form-select-control-work-status' }}\n                      value={this.state.currUser.Work_Status}\n                      onChange={(event, data) => this.setState({currUser: {...this.state.currUser, Work_Status: data.value}})}\n                      placeholder='Work Status'\n                      search\n                      searchInput={{ id: 'form-select-control-work-status' }}\n                    />\n                    <Form.Field\n                      control={Select}\n                      options={Constants.occupationOptions}\n                      label={{ children: 'Occupation:', htmlFor: 'form-select-control-work-schedule' }}\n                      placeholder='Occupation'\n                      value={this.state.currUser.Occupation}\n                      onChange={(event, data) => this.setState({currUser: {...this.state.currUser, Occupation: data.value}})}\n                      search\n                      searchInput={{ id: 'form-select-control-work-schedule' }}\n                    />\n                  </Form.Group>\n      \n                  <Form.Field>\n                    <label>Availability for Seva:</label>\n                    <Table celled unstackable>\n                      <Table.Header>\n                        <Table.Row>\n                          <Table.HeaderCell></Table.HeaderCell>\n                          <Table.HeaderCell>Mon</Table.HeaderCell>\n                          <Table.HeaderCell>Tue</Table.HeaderCell>\n                          <Table.HeaderCell>Wed</Table.HeaderCell>\n                          <Table.HeaderCell>Thu</Table.HeaderCell>\n                          <Table.HeaderCell>Fri</Table.HeaderCell>\n                          <Table.HeaderCell>Sat</Table.HeaderCell>\n                          <Table.HeaderCell>Sun</Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n      \n                      <Table.Body>\n                        <Table.Row>\n                          <Table.Cell>Morning</Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Monday\", \"Morning\")} onChange={(event, data) => this.setAvailabilityValues('Monday', 'Morning', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Tuesday\", \"Morning\")} onChange={(event, data) => this.setAvailabilityValues('Tuesday', 'Morning', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Wednesday\", \"Morning\")} onChange={(event, data) => this.setAvailabilityValues('Wednesday', 'Morning', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Thursday\", \"Morning\")} onChange={(event, data) => this.setAvailabilityValues('Thursday', 'Morning', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Friday\", \"Morning\")} onChange={(event, data) => this.setAvailabilityValues('Friday', 'Morning', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Saturday\", \"Morning\")} onChange={(event, data) => this.setAvailabilityValues('Saturday', 'Morning', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Sunday\", \"Morning\")} onChange={(event, data) => this.setAvailabilityValues('Sunday', 'Morning', data)}/></Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell>Afternoon</Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Monday\", \"Afternoon\")} onChange={(event, data) => this.setAvailabilityValues('Monday', 'Afternoon', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Tuesday\", \"Afternoon\")} onChange={(event, data) => this.setAvailabilityValues('Tuesday', 'Afternoon', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Wednesday\", \"Afternoon\")} onChange={(event, data) => this.setAvailabilityValues('Wednesday', 'Afternoon', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Thursday\", \"Afternoon\")} onChange={(event, data) => this.setAvailabilityValues('Thursday', 'Afternoon', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Friday\", \"Afternoon\")} onChange={(event, data) => this.setAvailabilityValues('Friday', 'Afternoon', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Saturday\", \"Afternoon\")} onChange={(event, data) => this.setAvailabilityValues('Saturday', 'Afternoon', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Sunday\", \"Afternoon\")} onChange={(event, data) => this.setAvailabilityValues('Sunday', 'Afternoon', data)}/></Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell>Evening</Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Monday\", \"Evening\")} onChange={(event, data) => this.setAvailabilityValues('Monday', 'Evening', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Tuesday\", \"Evening\")} onChange={(event, data) => this.setAvailabilityValues('Tuesday', 'Evening', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Wednesday\", \"Evening\")} onChange={(event, data) => this.setAvailabilityValues('Wednesday', 'Evening', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Thursday\", \"Evening\")} onChange={(event, data) => this.setAvailabilityValues('Thursday', 'Evening', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Friday\", \"Evening\")} onChange={(event, data) => this.setAvailabilityValues('Friday', 'Evening', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Saturday\", \"Evening\")} onChange={(event, data) => this.setAvailabilityValues('Saturday', 'Evening', data)}/></Table.Cell>\n                          <Table.Cell><Checkbox checked={this.getAvailabilityValues(\"Sunday\", \"Evening\")} onChange={(event, data) => this.setAvailabilityValues('Sunday', 'Evening', data)}/></Table.Cell>\n                        </Table.Row>\n                      </Table.Body>\n                    </Table>\n                  </Form.Field>\n      \n                  <Form.Field>\n                    <label>Skills:</label>\n                    <Dropdown placeholder='Skills' fluid multiple selection options={Constants.skills} \n                              value={this.state.currUser.Skills.split(\",\")}\n                              onChange={(event, data) => this.setState({currUser: {...this.state.currUser, Skills: data.value.toString()}})}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Interests:</label>\n                    <Dropdown placeholder='Interests' fluid multiple selection options={Constants.skills} \n                              value={this.state.currUser.Interests.split(\",\")}\n                              onChange={(event, data) => this.setState({currUser: {...this.state.currUser, Interests: data.value.toString()}})}\n                    />\n                  </Form.Field>\n      \n                  <Form.Group widths='equal'>\n                    <Form.Input fluid label='Date of Birth:' type=\"date\" \n                                value={this.state.currUser.DOB}\n                                onChange={(event) => this.setState({currUser: {...this.state.currUser, DOB: event.target.value}})}\n                    />\n                    <Form.Field\n                      control={Select}\n                      options={Constants.tshirtOptions}\n                      label={{ children: 'Shirt Size:', htmlFor: 'form-select-control-tshirt-options' }}\n                      placeholder='Adult Sizes'\n                      search\n                      searchInput={{ id: 'form-select-control-tshirt-options' }}\n                      value={this.state.currUser.Shirt_Size}\n                      onChange={(event, data) => this.setState({currUser: {...this.state.currUser, Shirt_Size: data.value}})}\n                    />\n                  </Form.Group>\n                  <Form.Input fluid label='Specialized Skills &amp; Licenses:' placeholder=\"Please type 'None' if you don't have any\"\n                              value={this.state.currUser.Licenses}\n                              onChange={(event) => this.setState({currUser: {...this.state.currUser, Licenses: event.target.value}})} \n                  />\n                  <Button onClick={() => {window.location.href=\"/\"}}>Back</Button>\n                  <Button onClick={() => this.handleSubmit()} primary>Submit</Button>\n                </Form>\n              </div>\n            : \"\"}\n          </Container>\n          <Footer></Footer>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Container, Message, Button } from \"semantic-ui-react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nexport default class FormSubmission extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() {\n    if (!this.props.location.state || !this.props.location.state.submitSuccess) {\n      return <Redirect to=\"/\" />\n    } else {\n      return (\n        <div>\n          <Header></Header>\n          <Container>\n            <div className=\"submit-page\">\n                <Message positive>\n                    <Message.Header>Jay Swaminarayan, your response has been submitted.</Message.Header>\n                    <p>You will be reached out by a <b>karyakar</b> soon.</p>\n                    <br/>\n                    <Button onClick={() => {window.location.href=\"/\"}} primary>Go back to Home</Button>\n                </Message>\n            </div>\n          </Container>\n          <Footer></Footer>\n        </div>\n      );\n    }\n  }\n}\n","import { PureComponent } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollIntoView extends PureComponent {\n  componentDidMount = () => window.scrollTo(0, 0);\n\n  componentDidUpdate = prevProps => {\n    if (this.props.location !== prevProps.location) window.scrollTo(0, 0);\n  };\n\n  render = () => this.props.children;\n}\n\nexport default withRouter(ScrollIntoView);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\n\nimport 'semantic-ui/dist/semantic.min.css'\nimport \"./pages/assets/Style.scss\";\n\n// Custom Components\nimport Home from \"./pages/Home\";\nimport Form from \"./pages/ZSM-Form\";\nimport FormSubmission from \"./pages/Form-Submission\";\n\nimport ScrollIntoView from \"./pages/components/ScrollInToView\";\n// import TeacherAttendance from \"./pages/TeacherAttendance\";\n\n\nconst routing = (\n  <Router>\n    <div>\n      <ScrollIntoView>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/form\" component={Form} />\n        <Route path=\"/submit\" component={FormSubmission} />\n      </ScrollIntoView>\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// List all the constants values for dropdowns here\n\nmodule.exports = {\n    // sql_connection : \"mysql://zsm-app-3135399359:ewvcdoubu9@mysql.stackcp.com:57153/zsm-app-3135399359?debug=true\",\n    workStatusOptions : [\n        { text: 'Working Part Time', value: 'Working Part Time' },\n        { text: 'Working Full Time', value: 'Working Full Time' },\n        { text: 'Stay-at-Home Parent', value: 'Stay-at-Home Parent' },\n        { text: 'Retired / Not Working', value: 'Retired / Not Working' },\n        { text: 'Student', value: 'Student' },\n    ],\n  \n    tshirtOptions : [\n        { text: 'XS', value: 'XS' },\n        { text: 'S', value: 'S' },\n        { text: 'M', value: 'M' },\n        { text: 'L', value: 'L' },\n        { text: 'XL', value: 'XL' },\n        { text: 'XXL', value: 'XXL' },\n        { text: 'XXXL', value: 'XXXL' },\n    ],\n  \n    occupationOptions : [\n        { text: 'Healthcare - Physician / PA', value: 'Healthcare - Physician / PA' },\n        { text: 'Healthcare - Pharmacist', value: 'Healthcare - Pharmacist' },\n        { text: 'Healthcare - Nurse', value: 'Healthcare - Nurse' },\n        { text: 'Healthcare - Lab', value: 'Healthcare - Lab' },\n        { text: 'Healthcare - Dentist / Optometrist', value: 'Healthcare - Dentist / Optometrist' },\n        { text: 'Architect / Engineer / Construction', value: 'Architect / Engineer / Construction' },\n        { text: 'Educator - Teacher / Professor / Trainer', value: 'Educator - Teacher / Professor / Trainer' },\n        { text: 'Lawyer / Judge', value: 'Lawyer / Judge' },\n        { text: 'Accountant', value: 'Accountant' },\n        { text: 'Business Owner', value: 'Business Owner' },\n        { text: 'Business Management / Operations / Administration', value: 'Business Management / Operations / Administration' },\n        { text: 'Information Technology (IT)', value: 'Information Technology (IT)' },\n        { text: 'Arts / Design / Media Professional', value: 'Arts / Design / Media Professional' },\n        { text: 'Electrician', value: 'Electrician' },\n        { text: 'Handyman', value: 'Handyman' },\n        { text: 'Plumber', value: 'Plumber' },\n        { text: 'Other', value: 'Other' }\n    ],\n  \n    skills : [\n        { text: 'IT Software Development', value: 'IT Software Development' },\n        { text: 'IT Database', value: 'IT Database' },\n        { text: 'IT Business Analysis', value: 'IT Business Analysis' },\n        { text: 'Housekeeping', value: 'Housekeeping' },\n        { text: 'Landscape/Gardening', value: 'Landscape/Gardening' },\n        { text: 'Facility Maintenance', value: 'Facility Maintenance' },\n        { text: 'HVAC/Electric/Plumbing', value: 'HVAC/Electric/Plumbing' },\n        { text: 'Construction', value: 'Construction' },\n        { text: 'Graphic Design', value: 'Graphic Design' },\n        { text: 'Video Editing', value: 'Video Editing' },\n        { text: 'Audio Video Operator', value: 'Audio Video Operator' },\n        { text: 'Singing', value: 'Singing' },\n        { text: 'Secretarial', value: 'Secretarial' },\n        { text: 'Accounting', value: 'Accounting' },\n        { text: 'Audit', value: 'Audit' },\n        { text: 'Outreach', value: 'Outreach' },\n        { text: 'Mandir Tours', value: 'Mandir Tours' },\n        { text: 'Kitchen/Cooking', value: 'Kitchen/Cooking' },\n        { text: 'Transportation/Driving', value: 'Transportation/Driving' },\n        { text: 'Security', value: 'Security' },\n        { text: 'Decoration', value: 'Decoration' },\n        { text: 'Tailor', value: 'Tailor' },\n        { text: 'Healthcare - Administration', value: 'Healthcare - Administration' },\n        { text: 'Healthcare - Physician/Specialty', value: 'Healthcare - Physician/Specialty' },\n        { text: 'Healthcare - Nurse', value: 'Healthcare - Nurse' },\n        { text: 'Healthcare - Lab', value: 'Healthcare - Lab' },\n        { text: 'Healthcare - Dentist/Optometrist', value: 'Healthcare - Dentist/Optometrist' }\n    ]\n};"],"sourceRoot":""}